
def write_delay(basestate):
    print("// delay")
    print("{} : begin".format(basestate))
    print("    init_state    <= {};".format(basestate+1))
    print("end")
    return basestate+1

def write_nibble(basestate, nibble, comment, data=False):
    print("// rising edge of EN for {} - writing {}".format(comment, nibble))
    print("{} : begin".format(basestate))
    print("    data_int   <= {};".format(nibble))
    print("    rs_int     <= 1'b{};".format(1 if data else 0))
    print("    en_int     <= 1'b1;")
    print("    init_state <= {};".format(basestate+1))
    print("end")
    print("// falling edge of EN for {} - writing {}".format(comment, nibble))
    print("{} : begin".format(basestate+1))
    print("    en_int     <= 1'b0;")
    print("    init_state <= {};".format(basestate+2))
    print("end")
    return basestate+2

def write_word(basestate, word, comment, data=False):
    if type(word) == str:
        word = ord(word)
    nextstate = write_nibble(basestate, word >> 4, comment + " (MSB)", data)
    return write_nibble(nextstate, word & 15, comment + " (LSB)", data)

nextstate = 1
nextstate = write_nibble(nextstate, 3, "4 bit init")
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_nibble(nextstate, 3, "4 bit init (repeated)")
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_delay(nextstate)
nextstate = write_nibble(nextstate, 3, "4 bit init (repeated)")
nextstate = write_delay(nextstate)
nextstate = write_nibble(nextstate, 2, "4 bit mode")
nextstate = write_word(nextstate, 0x28, "FUNCTIONSET")
nextstate = write_word(nextstate, 0x0c, "DISPLAYCONTROL")
nextstate = write_word(nextstate, 0x06, "ENTRYMODESET")
nextstate = write_word(nextstate, 0x01, "CLEARDISPLAY")
nextstate = write_word(nextstate, "I", "I", True)
nextstate = write_word(nextstate, "t", "t", True)
nextstate = write_word(nextstate, "s", "s", True)
nextstate = write_word(nextstate, " ", " ", True)
nextstate = write_word(nextstate, "T", "T", True)
nextstate = write_word(nextstate, "a", "a", True)
nextstate = write_word(nextstate, "p", "p", True)
nextstate = write_word(nextstate, "e", "e", True)
nextstate = write_word(nextstate, "o", "o", True)
nextstate = write_word(nextstate, "u", "u", True)
nextstate = write_word(nextstate, "t", "t", True)
nextstate = write_word(nextstate, " ", " ", True)
nextstate = write_word(nextstate, "T", "T", True)
nextstate = write_word(nextstate, "i", "i", True)
nextstate = write_word(nextstate, "m", "m", True)
nextstate = write_word(nextstate, "e", "e", True)
nextstate = write_word(nextstate, 0xc4, "SETDDRAMADDR + 2nd Row")

